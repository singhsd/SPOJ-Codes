#include <iostream>
#include<algorithm>
#include<vector>
#include<numeric>
using namespace std;

vector <int> binry( int n )
{
    vector <int> v;
    while(n)
    {
        v.push_back(n%2);
        n/=2;
    }
    reverse(v.begin(),v.end());
    return v;
}

int convert( vector<int>&v )
{
    vector<int>:: iterator it=v.end();
    it--;
    int x=1;
    while(it!=v.begin())
    {
        *it = x*(*it);
        it--;
        x*=2;
    }
    *it=x*(*it);
    x=accumulate(v.begin(),v.end(),0);
    return x;
}

int main()
{
    vector <int> v;
    long long int t,nones,n,k;
    cin >> t;
    while(t--)
    {
        cin >> n >> k;
        if(k==0)
        {
         cout << "-1" << endl;
         continue;
        }
        n--;
        v=binry(n);
        nones=accumulate(v.begin(),v.end(),0);
        if(nones<=k)
        {
            cout << convert(v) << endl;
            v.clear();
        }
        else
        {
            k--;
            vector <int> :: iterator it = v.begin();
            while(k)
            {
                if(*it==1)
                    k--;
                it++;
            }
            while(it!=v.end())
                *(it++)=0;
            v.back()=1;
            cout << convert(v) << endl;
            v.clear();
        }
    }
    return 0;
}